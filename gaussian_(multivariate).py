# -*- coding: utf-8 -*-
"""GAUSSIAN (MULTIVARIATE).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SNZHYwAtJVnJHTG_DTP3rmtjFm2Byn7X
"""

import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

def compute_gaussian_density(points, mean_vec, cov_matrix):
    dimension = len(mean_vec)
    scaling_factor = 1 / (np.sqrt((2 * np.pi) ** dimension * np.linalg.det(cov_matrix)))

    deviation = points - mean_vec
    exponent_term = -0.5 * np.sum(deviation @ np.linalg.inv(cov_matrix) * deviation, axis=1)

    return scaling_factor * np.exp(exponent_term)

def visualize_gaussian_distribution(mean_vec, cov_matrix):
    x_vals = np.linspace(-5, 5, 100)
    y_vals = np.linspace(-5, 5, 100)
    X, Y = np.meshgrid(x_vals, y_vals)

    coord_pairs = np.vstack([X.ravel(), Y.ravel()]).T
    Z = compute_gaussian_density(coord_pairs, mean_vec, cov_matrix).reshape(X.shape)

    fig = plt.figure(figsize=(8, 6))
    ax = fig.add_subplot(111, projection='3d')

    ax.plot_surface(X, Y, Z, cmap='plasma', alpha=0.85)

    ax.set_xlabel('Feature 1')
    ax.set_ylabel('Feature 2')
    ax.set_zlabel('Density Value')
    ax.set_title('3D Gaussian Density Visualization')

    plt.show()

mean_A = np.array([0, 0])
cov_A = np.array([[0.8, 0.4], [0.4, 1.2]])

mean_B = np.array([3, -1])
cov_B = np.array([[1.1, 0.3], [0.3, 0.6]])

mean_C = np.array([-2, 2])
cov_C = np.array([[1.3, 0.2], [0.2, 0.7]])

visualize_gaussian_distribution(mean_A, cov_A)
visualize_gaussian_distribution(mean_B, cov_B)
visualize_gaussian_distribution(mean_C, cov_C)